<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.karamelsoft.flink</groupId>
    <artifactId>flink-demo</artifactId>
    <version>0.1.0-SNAPSHOT</version>

    <packaging>pom</packaging>

    <name>Flink Demo</name>

    <modules>
        <module>infrastructure</module>
        <module>wordcount</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <docker.repository.name>karamelsoft</docker.repository.name>

        <java.version>8</java.version>
        <scala.binary.version>2.12</scala.binary.version>

        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <scala-maven-plugin.version>4.4.0</scala-maven-plugin.version>
        <build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>
        <maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>

        <flink.version>1.10.1</flink.version>
        <slf4j.version>1.7.7</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Apache Flink dependencies -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-scala_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-clients_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- We use the maven-shade plugin to create a fat jar that contains all dependencies
                except flink and it's transitive dependencies. The resulting fat-jar can be executed
                on a cluster. Change the value of Program-Class if your program entry point changes. -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven-shade-plugin.version}</version>
                    <executions>
                        <!-- Run shade goal on package phase -->
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                            <configuration>
                                <artifactSet>
                                    <excludes>
                                        <!-- This list contains all dependencies of flink-dist
                                        Everything else will be packaged into the fat-jar
                                        -->
                                        <exclude>org.apache.flink:flink-annotations</exclude>
                                        <exclude>org.apache.flink:flink-shaded-hadoop2</exclude>
                                        <exclude>org.apache.flink:flink-shaded-curator-recipes</exclude>
                                        <exclude>org.apache.flink:flink-core</exclude>
                                        <exclude>org.apache.flink:flink-java</exclude>
                                        <exclude>org.apache.flink:flink-scala_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-runtime_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-optimizer_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-clients_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-avro_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-examples-batch_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-examples-streaming_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-streaming-java_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-streaming-scala_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-scala-shell_${scala.binary.version}</exclude>
                                        <exclude>org.apache.flink:flink-python</exclude>
                                        <exclude>org.apache.flink:flink-metrics-core</exclude>
                                        <exclude>org.apache.flink:flink-metrics-jmx</exclude>
                                        <exclude>org.apache.flink:flink-statebackend-rocksdb_${scala.binary.version}</exclude>

                                        <!-- Also exclude very big transitive dependencies of Flink

                                        WARNING: You have to remove these excludes if your code relies on other
                                        versions of these dependencies.

                                        -->

                                        <exclude>log4j:log4j</exclude>
                                        <exclude>org.scala-lang:scala-library</exclude>
                                        <exclude>org.scala-lang:scala-compiler</exclude>
                                        <exclude>org.scala-lang:scala-reflect</exclude>
                                        <exclude>com.data-artisans:flakka-actor_*</exclude>
                                        <exclude>com.data-artisans:flakka-remote_*</exclude>
                                        <exclude>com.data-artisans:flakka-slf4j_*</exclude>
                                        <exclude>io.netty:netty-all</exclude>
                                        <exclude>io.netty:netty</exclude>
                                        <exclude>commons-fileupload:commons-fileupload</exclude>
                                        <exclude>org.apache.avro:avro</exclude>
                                        <exclude>commons-collections:commons-collections</exclude>
                                        <exclude>com.thoughtworks.paranamer:paranamer</exclude>
                                        <exclude>org.xerial.snappy:snappy-java</exclude>
                                        <exclude>org.apache.commons:commons-compress</exclude>
                                        <exclude>org.tukaani:xz</exclude>
                                        <exclude>com.esotericsoftware.kryo:kryo</exclude>
                                        <exclude>com.esotericsoftware.minlog:minlog</exclude>
                                        <exclude>org.objenesis:objenesis</exclude>
                                        <exclude>com.twitter:chill_*</exclude>
                                        <exclude>com.twitter:chill-java</exclude>
                                        <exclude>commons-lang:commons-lang</exclude>
                                        <exclude>junit:junit</exclude>
                                        <exclude>org.apache.commons:commons-lang3</exclude>
                                        <exclude>org.slf4j:slf4j-api</exclude>
                                        <exclude>org.slf4j:slf4j-log4j12</exclude>
                                        <exclude>log4j:log4j</exclude>
                                        <exclude>org.apache.commons:commons-math</exclude>
                                        <exclude>org.apache.sling:org.apache.sling.commons.json</exclude>
                                        <exclude>commons-logging:commons-logging</exclude>
                                        <exclude>commons-codec:commons-codec</exclude>
                                        <exclude>com.fasterxml.jackson.core:jackson-core</exclude>
                                        <exclude>com.fasterxml.jackson.core:jackson-databind</exclude>
                                        <exclude>com.fasterxml.jackson.core:jackson-annotations</exclude>
                                        <exclude>stax:stax-api</exclude>
                                        <exclude>com.typesafe:config</exclude>
                                        <exclude>org.uncommons.maths:uncommons-maths</exclude>
                                        <exclude>com.github.scopt:scopt_*</exclude>
                                        <exclude>commons-io:commons-io</exclude>
                                        <exclude>commons-cli:commons-cli</exclude>
                                    </excludes>
                                </artifactSet>
                                <filters>
                                    <filter>
                                        <artifact>org.apache.flink:*</artifact>
                                        <excludes>
                                            <!-- exclude shaded google but include shaded curator -->
                                            <exclude>org/apache/flink/shaded/com/**</exclude>
                                            <exclude>web-docs/**</exclude>
                                        </excludes>
                                    </filter>
                                    <filter>
                                        <!-- Do not copy the signatures in the META-INF folder.
                                        Otherwise, this might cause SecurityExceptions when using the JAR. -->
                                        <artifact>*:*</artifact>
                                        <excludes>
                                            <exclude>META-INF/*.SF</exclude>
                                            <exclude>META-INF/*.DSA</exclude>
                                            <exclude>META-INF/*.RSA</exclude>
                                        </excludes>
                                    </filter>
                                </filters>
                                <!-- If you want to use ./bin/flink run <quickstart jar> uncomment the following lines.
                                This will add a Main-Class entry to the manifest file -->
                                <createDependencyReducedPom>false</createDependencyReducedPom>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${scala-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${dockerfile-maven-plugin.version}</version>
                    <executions>
                        <execution>
                            <id>build</id>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                                <goal>tag</goal>
                            </goals>
                            <configuration>
                                <repository>${docker.repository.name}/${project.artifactId}</repository>
                                <tag>latest</tag>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                        <buildArgs>
                            <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                        </buildArgs>
                        <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>